Addressing Modes

Programs are normally written in a high-level language, which enables the programmer
to conveniently describe the operations to be performed on various data structures. When
translating a high-level language program into assembly language, the compiler generates
appropriate sequences of low-level instructions that implement the desired operations. The
different ways for specifying the locations of instruction operands are known as addressing
modes.

Types of Addressing modes:

1.Register mode—The operand is the contents of a processor register; the name of the register
is given in the instruction.
	Assembler syntax:Ri
	Example:Add R4, R2, R3

2.Absolute mode—The operand is in a memory location; the address of this location is given
explicitly in the instruction.
	Assembler Syntax:LOC
	Example:Load R2, NUM1

3.Indirect mode—The effective address of the operand is the contents of a register that is
specified in the instruction.
	Assembler Syntax:(Ri)

4.Index mode—The effective address of the operand is generated by adding a constant value
to the contents of a register.
	Assembler Syntax:X(Ri)

5.Immediate mode—The operand is given explicitly in the instruction.
	Assembler Syntax:#Value
	Example:Add R4, R6, 200immediate
